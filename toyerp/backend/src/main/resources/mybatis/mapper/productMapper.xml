<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.toyerp.domain.inventory.mapper.ProductMapper">

  <!-- 전체 상품 조회 (삭제되지 않은 것만) with 계산된 재고 -->
  <select id="getAllProducts"
          resultType="com.example.toyerp.domain.inventory.vo.ProductVO">
    SELECT 
        p.id,
        p.name,
        p.unit,
        p.price,
        p.code,
        p.category,
        p.min_stock,
        p.is_del,
        COALESCE(
            (SELECT SUM(CASE WHEN st.transaction_type = 'IN' THEN st.quantity ELSE -st.quantity END)
             FROM stock_transaction st 
             WHERE st.product_id = p.id AND st.is_del = 0), 0
        ) as currentStock
    FROM product p
    WHERE p.is_del = 0
    ORDER BY p.id
  </select>

  <!-- ID로 상품 조회 with 계산된 재고 -->
  <select id="getProductById"
          parameterType="int"
          resultType="com.example.toyerp.domain.inventory.vo.ProductVO">
    SELECT 
        p.id,
        p.name,
        p.unit,
        p.price,
        p.code,
        p.category,
        p.min_stock,
        p.is_del,
        COALESCE(
            (SELECT SUM(CASE WHEN st.transaction_type = 'IN' THEN st.quantity ELSE -st.quantity END)
             FROM stock_transaction st 
             WHERE st.product_id = p.id), 0
        ) as currentStock
    FROM product p
    WHERE p.id = #{id} AND p.is_del = 0
  </select>

  <!-- 상품코드로 조회 with 계산된 재고 -->
  <select id="getProductByCode"
          parameterType="string"
          resultType="com.example.toyerp.domain.inventory.vo.ProductVO">
    SELECT 
        p.id,
        p.name,
        p.unit,
        p.price,
        p.code,
        p.category,
        p.min_stock,
        p.is_del,
        COALESCE(
            (SELECT SUM(CASE WHEN st.transaction_type = 'IN' THEN st.quantity ELSE -st.quantity END)
             FROM stock_transaction st 
             WHERE st.product_id = p.id), 0
        ) as currentStock
    FROM product p
    WHERE p.code = #{code} AND p.is_del = 0
  </select>

  <!-- 상품코드 중복 체크 -->
  <select id="countByCode" parameterType="string" resultType="int">
    SELECT COUNT(*)
    FROM product
    WHERE code = #{code} AND is_del = 0
  </select>

    <!-- 상품 등록 -->
  <insert id="insertProduct" parameterType="com.example.toyerp.domain.inventory.dto.request.ProductCreateRequest">
    INSERT INTO product (
        name, 
        unit, 
        price, 
        code, 
        category, 
        min_stock, 
        is_del
    ) VALUES (
        #{name}, 
        #{unit}, 
        #{price}, 
        #{code}, 
        #{category}, 
        #{minStock}, 
        0
    )
  </insert>

    <!-- 상품 정보 수정 -->
  <update id="updateProduct" parameterType="com.example.toyerp.domain.inventory.dto.request.ProductUpdateRequest">
    UPDATE product 
    SET 
        name = #{name},
        unit = #{unit},
        price = #{price},
        code = #{code},
        category = #{category},
        min_stock = #{minStock}
    WHERE id = #{id} AND is_del = 0
  </update>

</mapper>